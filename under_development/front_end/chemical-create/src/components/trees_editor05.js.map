{
  "version": 3,
  "file": "trees_editor05.js",
  "sourceRoot": "",
  "sources": [
    "trees_editor05.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "`/* eslint-disable */`\r\n\r\n\r\nexport class Tree\r\n    @instances = []\r\n    @children_storages_url = \"\"\r\n    constructor: (tree_container,\r\n                  input_name,\r\n                  root,\r\n                  path_to_node,\r\n                  children_storages_url) ->\r\n        if Tree.instances.length >= 2\r\n            throw Error(\"can't create more than 2 tree instances\")\r\n        else if Tree.instances.length == 1\r\n            @number = 1\r\n        else\r\n            @number = 0\r\n        Object.defineProperty @, \"other_instance\",\r\n            get: ->\r\n                if Tree.instances.length <= 1\r\n                    return null\r\n                else if Tree.instances.length == 2 and @number == 0\r\n                    return Tree.instances[1]\r\n                else if Tree.instances.length == 2 and @number == 1\r\n                    return Tree.instances[0]\r\n        #there are default (storage_edit) mode, search_form and chemical_edit\r\n        @mode = \"chemical_edit\"\r\n        Tree.children_storages_url = children_storages_url\r\n        @highlighted_nodes_ids = []\r\n        @tree_container = tree_container\r\n        @input_node = document.querySelector(\"input[name='#{input_name}']\")\r\n        @background = tree_container.querySelector(\".background\")\r\n        @foreground = tree_container.querySelector(\".foreground\")\r\n        if root != \"error\"\r\n            @root_object = new Storage(root.name,\r\n                                       Number(root.id),\r\n                                       null,\r\n                                       @,\r\n                                       false)\r\n        else\r\n            @root_object = new Storage(\"error\",\r\n                                       0,\r\n                                       null,\r\n                                       @,\r\n                                       false)\r\n        @root_object.li = @foreground.querySelector(\"li\")\r\n        @root_object.span = @root_object.li.querySelector(\"span\")\r\n        @root_object.span.addEventListener(\"dblclick\", @root_object.open_close)\r\n        @root_object.span.addEventListener(\"click\", @process_click)\r\n        @tree_container.addEventListener(\"unhighlight-storage\", @unhighlight_storage)\r\n\r\n        Tree.instances.push(@)\r\n        @frame_maker = new FrameMaker(@)\r\n        if @mode != \"chemical_edit\"\r\n            @tree_container.addEventListener(\"mousedown\", @tree_container_mouse)\r\n            @tree_container.addEventListener(\"mouseup\", @tree_container_mouse)\r\n            @tree_container.addEventListener(\"mousemove\", @tree_container_mouse)\r\n        @there_was_mousedown = false\r\n\r\n        if path_to_node != undefined\r\n            Storage.open_with_path(path_to_node)\r\n\r\n    unhighlight_storage: () =>\r\n        copy_of_highlighted = []\r\n        Object.assign(copy_of_highlighted, @highlighted_nodes_ids)\r\n        for processed_id of copy_of_highlighted\r\n            @unhighlight(processed_id)\r\n        @update_field()\r\n\r\n    update_field: () =>\r\n        highlighted_nodes_json = JSON.stringify(@highlighted_nodes_ids)\r\n        if @mode == \"chemical_edit\"\r\n            if highlighted_nodes_json == \"[]\"\r\n                highlighted_node = null\r\n            else\r\n                highlighted_node = @highlighted_nodes_ids[0]\r\n            [full_path_ids, full_path_names] =\r\n                Storage.make_full_path(highlighted_node)\r\n            object_for_input = {\r\n                \"highlighted_nodes\": @highlighted_nodes_ids\r\n                \"full_path_ids\": full_path_ids\r\n                \"full_path_names\": full_path_names\r\n            }\r\n            json_for_input = JSON.stringify(object_for_input)\r\n        else\r\n            json_for_input = highlighted_nodes_json\r\n        @input_node.value = json_for_input\r\n\r\n    tree_container_mouse: (event) =>\r\n        if event.target.nodeName != \"SPAN\"\r\n            if event.type == \"mousedown\"\r\n                @there_was_mousedown = true\r\n            else if event.type == \"mousemove\"\r\n                @there_was_mousedown = false\r\n            else if event.type == \"mouseup\" and @there_was_mousedown\r\n                for id_of_node in @highlighted_nodes_ids\r\n                    node = @foreground.querySelector(\r\n                        \"span[data-storage_node_id='#{id_of_node}']\"\r\n                    )\r\n                    node.classList.remove(\"highlighted\")\r\n                @highlighted_nodes_ids = []\r\n                @update_field()\r\n                @there_was_mousedown = false\r\n\r\n    highlight: (node_id) =>\r\n        if @highlighted_nodes_ids.indexOf(node_id) == -1\r\n            @highlighted_nodes_ids.push(node_id)\r\n            @update_field()\r\n            node = @foreground.querySelector(\r\n                \"span[data-storage_node_id='#{node_id}']\"\r\n            )\r\n            node.classList.add(\"highlighted\")\r\n\r\n    unhighlight: (node_id) =>\r\n        if @highlighted_nodes_ids.indexOf(node_id) != -1\r\n            index_in_array = @highlighted_nodes_ids.indexOf(node_id)\r\n            @highlighted_nodes_ids.splice(index_in_array, 1)\r\n            @update_field()\r\n            node = @foreground.querySelector(\r\n                \"span[data-storage_node_id='#{node_id}']\"\r\n            )\r\n            node.classList.remove(\"highlighted\")\r\n\r\n    highlight_only_this: (node_id) =>\r\n        for id_of_node in @highlighted_nodes_ids\r\n            node = @foreground.querySelector(\r\n                \"span[data-storage_node_id='#{id_of_node}']\"\r\n            )\r\n            node.classList.remove(\"highlighted\")\r\n        @highlighted_nodes_ids = []\r\n        @update_field()\r\n        @highlight(node_id)\r\n\r\n    process_click: (event) =>\r\n        if event.target.classList.contains(\"highlighted\")\r\n            if event.shiftKey or event.ctrlKey\r\n                @highlighted_shift_or_ctrl(event)\r\n            else\r\n                @highlighted_no_key(event)\r\n        else\r\n            if @mode == \"chemical_edit\"\r\n                node_id = event.target.dataset.storage_node_id\r\n                node_object = Chemical.chemicals_and_storages[node_id]\r\n                if (node_object instanceof Storage and\r\n                  node_object.is_terminal == true)\r\n                    @unhighlighted_no_key(event)\r\n            else if event.shiftKey\r\n                @unhighlighted_shift(event)\r\n            else if event.ctrlKey\r\n                @unhighlighted_ctrl(event)\r\n            else\r\n                @unhighlighted_no_key(event)\r\n\r\n    highlighted_shift_or_ctrl: (event) =>\r\n        @unhighlight(event.target.dataset.storage_node_id)\r\n\r\n    highlighted_no_key: (event) =>\r\n        if @highlighted_nodes_ids.length == 1\r\n            @unhighlight(event.target.dataset.storage_node_id)\r\n        else if @highlighted_nodes_ids.length > 1\r\n            @highlight_only_this(event.target.dataset.storage_node_id)\r\n\r\n    unhighlighted_shift: (event) =>\r\n        the_ul = @foreground.querySelector(\"ul\")\r\n        levels = [[the_ul]]\r\n        while levels[levels.length - 1].length != 0\r\n            levels = @process_levels(levels)\r\n        uls_spans_level = null\r\n        for level in levels\r\n            if level.indexOf(event.target) != -1\r\n                uls_spans_level = level\r\n                break\r\n        spans_level_list = []\r\n        for node in uls_spans_level\r\n            if node.tagName == \"SPAN\"\r\n                spans_level_list.push(node)\r\n        @process_span_list(spans_level_list, event.target)\r\n\r\n    process_levels: (levels) ->\r\n        last_level = levels[levels.length - 1]\r\n        new_level = []\r\n        for item in last_level\r\n            children_arr = Array.from(item.children)\r\n            Array.prototype.push.apply(new_level, children_arr)\r\n        levels.push(new_level)\r\n        return levels\r\n\r\n    process_span_list: (span_list, event_target) =>\r\n        will_continue = false\r\n        for node in span_list\r\n            if node.classList.contains(\"highlighted\")\r\n                will_continue = true\r\n                break\r\n        if not will_continue\r\n            return null\r\n        @highlight_domain(span_list, event_target)\r\n\r\n    highlight_domain: (span_list, event_target) =>\r\n        domain_of_numbers = []\r\n        target_number = span_list.indexOf(event_target)\r\n        for number in [target_number..0]\r\n            if span_list[number].classList.contains(\"highlighted\")\r\n                break\r\n            else\r\n                domain_of_numbers.push(number)\r\n                continue\r\n        if target_number < span_list.length - 1\r\n            for number in [target_number + 1..span_list.length - 1]\r\n                if span_list[number].classList.contains(\"highlighted\")\r\n                    break\r\n                else\r\n                    domain_of_numbers.push(number)\r\n                    continue\r\n        for number in domain_of_numbers\r\n            @highlight(span_list[number].dataset.storage_node_id)\r\n\r\n\r\n    unhighlighted_ctrl: (event) =>\r\n        @highlight(event.target.dataset.storage_node_id)\r\n\r\n    unhighlighted_no_key: (event) =>\r\n        @highlight_only_this(event.target.dataset.storage_node_id)\r\n\r\n\r\nclass Chemical\r\n    @chemicals_and_storages = {}\r\n    constructor: (name, id, parent, tree) ->\r\n        @name = name\r\n        @id = id\r\n        @parent = parent\r\n        @tree = tree\r\n        @li = null\r\n        @span = null\r\n        Chemical.chemicals_and_storages[id] = @\r\n\r\n\r\nclass Storage extends Chemical\r\n    constructor: (name, id, parent, tree, is_terminal) ->\r\n        super(name, id, parent, tree)\r\n        @children = []\r\n        @level = null\r\n        @is_terminal = is_terminal\r\n        @is_open = false\r\n\r\n    @make_full_path: (node_id) =>\r\n        if node_id == null\r\n            return [[], []]\r\n        else\r\n            full_path_ids = []\r\n            full_path_names = []\r\n            full_path_ids.push(node_id)\r\n            node_instance = Chemical.chemicals_and_storages[node_id]\r\n            full_path_names.push(node_instance.name)\r\n            while node_instance.parent != null\r\n                node_instance = node_instance.parent\r\n                full_path_names.push(node_instance.name)\r\n                full_path_ids.push(node_instance.id)\r\n            full_path_ids.reverse()\r\n            full_path_names.reverse()\r\n            return [full_path_ids, full_path_names]\r\n\r\n    @open_with_path: (path_to_node) =>\r\n        full_path = path_to_node.full_path\r\n        children_obj = path_to_node.children\r\n        Receiver.register_children(children_obj)\r\n        for i in [0..full_path.length - 1]\r\n            node_id_to_open = full_path[i]\r\n            node_to_open = Chemical.chemicals_and_storages[node_id_to_open]\r\n            await node_to_open.open()\r\n        last_node_id = full_path.slice(-1)\r\n        last_node = Chemical.chemicals_and_storages[last_node_id]\r\n        last_node.tree.highlight(last_node_id)\r\n\r\n    open_close: (event) =>\r\n        @tree.unhighlight(event.target.dataset.storage_node_id)\r\n        if @is_open and event.target == @span\r\n            @close()\r\n        else\r\n            if event.target == @span\r\n                @open()\r\n        @tree.frame_maker.destructor()\r\n        @tree.frame_maker = new FrameMaker(@tree)\r\n\r\n    close: () =>\r\n        ul = @li.querySelector(\"ul\")\r\n        ul.remove()\r\n        @children = []\r\n        @is_open = false\r\n        @li.classList.remove(\"open\")\r\n        @li.classList.add(\"closed\")\r\n\r\n    open: () =>\r\n        children = await Receiver.get_children(@id)\r\n        @create_children_from_list(children)\r\n        if JSON.stringify(children) != \"{}\"\r\n            @is_open = true\r\n            @li.classList.remove(\"closed\")\r\n            @li.classList.add(\"open\")\r\n\r\n    create_children_from_list: (children) ->\r\n        ul = document.createElement(\"ul\")\r\n        @li.append(ul)\r\n        for i in [0, children.length - 1]\r\n            name = children[i][\"name\"]\r\n            id = children[i][\"id\"]\r\n            type = children[i][\"type\"]\r\n            if type == 2\r\n                child = new Chemical(name, id, @, @tree)\r\n            else if type == 0\r\n                child = new Storage(name, id, @, @tree, false)\r\n            else\r\n                child = new Storage(name, id, @, @tree, true)\r\n            @children.push(child)\r\n            li = document.createElement(\"li\")\r\n            span = document.createElement(\"span\")\r\n            span.textContent = name\r\n            span.setAttribute(\"data-storage_node_id\", id)\r\n            li.append(span)\r\n            ul.append(li)\r\n            child.li = li\r\n            child.span = span\r\n            if child instanceof Storage\r\n                span.addEventListener(\"dblclick\", child.open_close)\r\n                span.addEventListener(\"click\", @tree.process_click)\r\n                li.classList.add(\"closed\")\r\n            else\r\n                span.addEventListener(\"click\", @tree.process_click)\r\n                li.classList.add(\"chemical\")\r\n\r\n\r\nclass Receiver\r\n#    @content = {\r\n#        1: {name: \"One\", parent: 0}\r\n#        2: {name: \"Two\", parent: 0}\r\n#        3: {name: \"Three\", parent: 0}\r\n#        4: {name: \"Four\", parent: 2}\r\n#        \"chem5\": {name: \"Five\", parent: 4}\r\n#    }\r\n    # content format: {1: {name: \"One\", parent: 0, terminal: false}}\r\n    # where 1 is storage id\r\n    @debug = true\r\n    @content = {}\r\n\r\n    @call: (parent_id) ->\r\n        result = {}\r\n        for key of @content\r\n            if @content[key].parent == parent_id\r\n                result[key] = @content[key].name\r\n        return result\r\n\r\n    @get_children: (parent_id) ->\r\n        if parent_id in @content\r\n            return @content[parent_id]\r\n        response = await fetch(\r\n            Tree.children_storages_url + String(parent_id)\r\n        )\r\n        if response.ok\r\n            answer = await response.json()\r\n            Object.assign(@content, answer)\r\n            return answer\r\n        else\r\n            return \"error\"\r\n\r\n    @register_children: (children_obj) ->\r\n        Object.assign(@content, children_obj)\r\n\r\n    @record_creation: () ->\r\n        null\r\n\r\n\r\nclass FrameMaker\r\n    constructor: (tree) ->\r\n        @tree = tree\r\n        @anchor = {x: 0, y: 0}\r\n        @background = tree.background\r\n        @foreground = tree.foreground\r\n        @foreground.addEventListener(\"mousedown\", @send_event)\r\n        @foreground.addEventListener(\"mouseup\", @send_event)\r\n        @foreground.addEventListener(\"mousemove\", @send_event)\r\n        @foreground.addEventListener(\"mouseleave\", @send_event)\r\n        @back_coords = @background.getBoundingClientRect()\r\n        @background.addEventListener(\"mousedown\", @mousedown_processor)\r\n        @inner_frame = null\r\n        @li_list = @make_li_list()\r\n\r\n    destructor: () =>\r\n        @foreground.removeEventListener(\"mousedown\", @send_event)\r\n        @foreground.removeEventListener(\"mouseup\", @send_event)\r\n        @foreground.removeEventListener(\"mousemove\", @send_event)\r\n        @foreground.removeEventListener(\"mouseleave\", @send_event)\r\n        @background.removeEventListener(\"mousedown\", @mousedown_processor)\r\n        @anchor = null\r\n        @background = null\r\n        @foreground = null\r\n        @back_coords = null\r\n        @inner_frame = null\r\n        @li_list = null\r\n\r\n    make_li_list: () =>\r\n        span_list = []\r\n        all_spans = @foreground.querySelectorAll(\"span\")\r\n        for element in all_spans\r\n            list_point = new ListPoint(element, @tree)\r\n            span_list.push(list_point)\r\n        return span_list\r\n\r\n    send_event: (event) =>\r\n        new_event = new MouseEvent(event.type, {\r\n            bubbles: false\r\n            cancelable: false\r\n            clientX: event.clientX\r\n            clientY: event.clientY\r\n        })\r\n        @background.dispatchEvent(new_event)\r\n\r\n    mousedown_processor: (event) =>\r\n        @anchor.x = event.clientX - @back_coords.left\r\n        @anchor.y = event.clientY - @back_coords.top\r\n        if @inner_frame\r\n            @inner_frame.remove()\r\n        @inner_frame = document.createElement(\"div\")\r\n        @background.prepend(@inner_frame)\r\n        style_value = (\"margin-top: #{@anchor.y}px; margin-left: \" +\r\n            \"#{@anchor.x}px; width: #{0}px; height: #{0}px;\")\r\n        @inner_frame.setAttribute(\"style\", style_value)\r\n        @inner_frame.classList.add(\"figure\")\r\n        @background.addEventListener(\"mousemove\", @mousemove_processor)\r\n        @background.addEventListener(\"mouseup\", @mouseup_leave_processor)\r\n        @background.addEventListener(\"mouseleave\", @mouseup_leave_processor)\r\n\r\n    mousemove_processor: (event) =>\r\n        x = event.clientX - @back_coords.left\r\n        y = event.clientY - @back_coords.top\r\n        margin_left = Math.min(x, @anchor.x)\r\n        margin_top = Math.min(y, @anchor.y)\r\n        width = Math.max(x, @anchor.x) - margin_left\r\n        height = Math.max(y, @anchor.y) - margin_top\r\n        style_value = (\"margin-top: #{margin_top}px; margin-left: \" +\r\n            \"#{margin_left}px; \" +\r\n            \"width: #{width}px; height: #{height}px;\")\r\n        @inner_frame.setAttribute(\"style\", style_value)\r\n        @check_for_intersections(margin_left,\r\n            margin_top,\r\n            margin_left + width,\r\n            margin_top + height)\r\n\r\n    check_for_intersections: (left, top, right, bottom) =>\r\n        for list_point in @li_list\r\n            list_point.check(left, top, right, bottom, @back_coords)\r\n\r\n    mouseup_leave_processor: (event) =>\r\n        @inner_frame.remove()\r\n        @inner_frame = null\r\n        @background.removeEventListener(\"mousemove\", @mousemove_processor)\r\n        @background.removeEventListener(\"mouseup\", @mouseup_leave_processor)\r\n        @background.removeEventListener(\"mouseleave\", @mouseup_leave_processor)\r\n\r\n\r\nclass ListPoint\r\n    constructor: (node, tree) ->\r\n        @node = node\r\n        @tree = tree\r\n        @rectangle = node.getBoundingClientRect()\r\n        @highlighted = false\r\n\r\n    check: (left, top, right, bottom, back_coords) =>\r\n        if (top < @rectangle.top - back_coords.top < bottom or\r\n            top < @rectangle.bottom - back_coords.top < bottom) and\r\n            (left < @rectangle.left - back_coords.left < right or\r\n                left < @rectangle.right - back_coords.left < right)\r\n            if @highlighted == false\r\n                @node.classList.add(\"highlighted\")\r\n                @highlighted = true\r\n                storage_node_id = @node.dataset.storage_node_id\r\n                @tree.highlight(storage_node_id)\r\n        else\r\n            if @highlighted == true\r\n                @node.classList.remove(\"highlighted\")\r\n                @highlighted = false\r\n                storage_node_id = @node.dataset.storage_node_id\r\n                @tree.unhighlight(storage_node_id)\r\n"
  ]
}